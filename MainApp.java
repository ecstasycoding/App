/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package App;




import com.sun.glass.events.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.YES_NO_OPTION;



/**
 *
 * @author admin
 * @param <T>
 */
public final class MainApp<T> extends javax.swing.JFrame {
    public ArrayList<Employee> emp = new ArrayList<>();
    char create;
     String listid;
    boolean checklist = true;
    /**
     * Creates new form MainApp
     */
    public MainApp() {
        initComponents();
        onLoad();
        Fil_combo();
 }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor. 
     */
   public void onLoad(){
    int index ;
        try{
            Class.forName("org.hsqldb.jdbc.JDBCDriver");
            try (Connection con = DriverManager.getConnection(
               "jdbc:hsqldb:file:HSQL/managing", "root", "")) {
            Statement stmt=(Statement) con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            ResultSet rs=stmt.executeQuery("select * from emp where id <>'admin' order by id");
            
            //show it on screen
            
            rs.first(); 
            id.setText(rs.getString(1));
            name.setText(rs.getString(2));
            age.setText(rs.getString(4));
            bplace.setText(rs.getString(5));
            email.setText(rs.getString(6));
            hswage.setText(rs.getString(7)); 
            } 
        }catch(ClassNotFoundException | SQLException e){ 
          e.printStackTrace();
            //JOptionPane.showMessageDialog(null, "Cannot connect Database !!!");
        }
            save.setEnabled(false);
            delete.setEnabled(true);
            find.setEnabled(true);
            first.setEnabled(true);
            next.setEnabled(true);
            previous.setEnabled(true);
            last.setEnabled(true);
            id.setEnabled(false);
            name.setEnabled(false);
            bplace.setEnabled(false);
            email.setEnabled(false);
            age.setEnabled(false);
            salary.setEnabled(false);
            edit.setEnabled(true);
            index=getRowNumber();
            record.setText("Record : 1 of "+index);
            DefaultListModel show = new DefaultListModel();
            try{
                Class.forName("org.hsqldb.jdbc.JDBCDriver");
            try (Connection con = DriverManager.getConnection(
               "jdbc:hsqldb:file:HSQL/managing", "root", "")) {
              
                Statement stmt=(Statement) con.createStatement();
                ResultSet rs=stmt.executeQuery("select * from emp where id <>'admin' order by id");
                //show it on screen
                while(rs.next()){
                    String id1 = rs.getString(1);
                    show.addElement(id1);
                }
                IDList.setModel(show);
                IDList.setSelectedIndex(0);
            }
        }catch(ClassNotFoundException | SQLException e){ 
           JOptionPane.showMessageDialog(null, "Cannot connect Database !!!");
           //e.printStackTrace();
        }
        
        
        IDList.setEnabled(true);
   }
   
    public void Fil_combo(){
        ResultSet rs;
        try{  
        Class.forName("org.hsqldb.jdbc.JDBCDriver");
            try (Connection con = DriverManager.getConnection(
               "jdbc:hsqldb:file:HSQL/managing", "root", "")) {
               Statement stmt=(Statement) con.createStatement();
             for(int i=1;i<=12;i++){
                 if(monthbox.getSelectedIndex()==(i-1)){
                   rs = stmt.executeQuery("select \"" + i + "\" from monthly where id ='"+id.getText()+"'");
                   while(rs.next()){
                   workhs.setText(String.valueOf(rs.getFloat(1)));
                 }
                   ResultSet rs1 = stmt.executeQuery("select\"" + i + "\" from salary where id ='"+id.getText()+"'");
                    while(rs1.next()){
                   salary.setText(String.valueOf(rs1.getFloat(1))+" $");
                 }
                 }
              }
              monthlabel.setText((String) monthbox.getSelectedItem());
           }
        }catch(ClassNotFoundException | SQLException e){ //JOptionPane.showMessageDialog(null, "Cannot connect Database !!!");
       e.printStackTrace();
        } 
        
    }
    public int getRowNumber(){

   int numberRow = 0;
 
 try{  
        Class.forName("org.hsqldb.jdbc.JDBCDriver");
            try (Connection con = DriverManager.getConnection(
               "jdbc:hsqldb:file:HSQL/managing", "root", "")) {
               Statement stmt=(Statement) con.createStatement();
              String query = "select count(name) from emp";
               ResultSet rs=stmt.executeQuery(query);
               //show it on screen
             while(rs.next()){
                    numberRow = rs.getInt(1)-1 ;
             }
     }
        }catch(ClassNotFoundException | SQLException e){ 
        JOptionPane.showMessageDialog(null, "Cannot connect Database !!!");
        //e.printStackTrace();
        } 
  
  
  
        return numberRow;
    }
    

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        button1 = new java.awt.Button();
        exit2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        first = new javax.swing.JButton();
        salary = new javax.swing.JTextField();
        record = new javax.swing.JLabel();
        previous = new javax.swing.JButton();
        next = new javax.swing.JButton();
        last = new javax.swing.JButton();
        name = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        bplace = new javax.swing.JTextField();
        age = new javax.swing.JTextField();
        id = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        IDList = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        find = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        save = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        saveicon = new javax.swing.JLabel();
        cancel = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        hswage = new javax.swing.JTextField();
        workhs = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        monthbox = new javax.swing.JComboBox<>();
        monthlabel = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        jLabel9.setText("jLabel9");

        button1.setLabel("button1");

        exit2.setText("Quit");
        exit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit2ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin");
        setBackground(new java.awt.Color(0, 255, 153));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(77, 5, 232));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Segoe Script", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Employee Management");

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/App/icon/time-manager.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(41, 241, 195));
        jPanel3.setForeground(new java.awt.Color(77, 5, 232));

        jLabel3.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(77, 5, 232));
        jLabel3.setText("No.ID");

        jLabel4.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(77, 5, 232));
        jLabel4.setText("Name");

        jLabel5.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(77, 5, 232));
        jLabel5.setText("Age");

        jLabel6.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(77, 5, 232));
        jLabel6.setText("Birth place");

        jLabel7.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(77, 5, 232));
        jLabel7.setText("Email");

        jLabel8.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(77, 5, 232));
        jLabel8.setText("Income of");

        first.setBackground(new java.awt.Color(51, 255, 0));
        first.setFont(new java.awt.Font("Script MT Bold", 1, 12)); // NOI18N
        first.setForeground(new java.awt.Color(255, 255, 255));
        first.setText("First");
        first.setEnabled(false);
        first.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstActionPerformed(evt);
            }
        });

        salary.setEnabled(false);

        record.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        record.setForeground(new java.awt.Color(77, 5, 232));
        record.setText("Record : ");

        previous.setBackground(new java.awt.Color(51, 255, 0));
        previous.setFont(new java.awt.Font("Script MT Bold", 1, 12)); // NOI18N
        previous.setForeground(new java.awt.Color(255, 255, 255));
        previous.setText("Previous");
        previous.setEnabled(false);
        previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousActionPerformed(evt);
            }
        });

        next.setBackground(new java.awt.Color(51, 255, 0));
        next.setFont(new java.awt.Font("Script MT Bold", 1, 12)); // NOI18N
        next.setForeground(new java.awt.Color(255, 255, 255));
        next.setText("Next");
        next.setEnabled(false);
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        last.setBackground(new java.awt.Color(51, 255, 0));
        last.setFont(new java.awt.Font("Script MT Bold", 1, 12)); // NOI18N
        last.setForeground(new java.awt.Color(255, 255, 255));
        last.setText("Last");
        last.setEnabled(false);
        last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastActionPerformed(evt);
            }
        });

        name.setEnabled(false);

        email.setEnabled(false);

        bplace.setEnabled(false);

        age.setEnabled(false);

        id.setEnabled(false);

        IDList.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        IDList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        IDList.setEnabled(false);
        IDList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IDListMouseClicked(evt);
            }
        });
        IDList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                IDListKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(IDList);

        jPanel2.setBackground(new java.awt.Color(255, 255, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setMaximumSize(new java.awt.Dimension(185, 272));

        find.setBackground(new java.awt.Color(51, 255, 0));
        find.setFont(new java.awt.Font("Script MT Bold", 1, 12)); // NOI18N
        find.setForeground(new java.awt.Color(255, 255, 255));
        find.setText("Find");
        find.setEnabled(false);
        find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(51, 255, 0));
        delete.setFont(new java.awt.Font("Script MT Bold", 1, 12)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete");
        delete.setEnabled(false);
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        exit.setBackground(new java.awt.Color(255, 153, 51));
        exit.setFont(new java.awt.Font("Script MT Bold", 1, 12)); // NOI18N
        exit.setForeground(new java.awt.Color(255, 255, 255));
        exit.setText("Back");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        save.setBackground(new java.awt.Color(255, 203, 5));
        save.setFont(new java.awt.Font("Script MT Bold", 1, 12)); // NOI18N
        save.setForeground(new java.awt.Color(255, 255, 255));
        save.setText("Save");
        save.setEnabled(false);
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        edit.setBackground(new java.awt.Color(51, 255, 0));
        edit.setFont(new java.awt.Font("Script MT Bold", 1, 12)); // NOI18N
        edit.setForeground(new java.awt.Color(255, 255, 255));
        edit.setText("Edit");
        edit.setEnabled(false);
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        saveicon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/App/icon/saveadmin.png"))); // NOI18N
        saveicon.setEnabled(false);
        saveicon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveiconMouseClicked(evt);
            }
        });

        cancel.setBackground(new java.awt.Color(204, 0, 204));
        cancel.setFont(new java.awt.Font("Script MT Bold", 1, 12)); // NOI18N
        cancel.setForeground(new java.awt.Color(255, 255, 255));
        cancel.setText("Cancel");
        cancel.setEnabled(false);
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(find, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(saveicon, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cancel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(saveicon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(edit)
                .addGap(18, 18, 18)
                .addComponent(delete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(find)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(cancel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exit)
                .addContainerGap())
        );

        jLabel12.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(77, 5, 232));
        jLabel12.setText("Hourly Wage");

        jLabel13.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(77, 5, 232));
        jLabel13.setText("Work hours ");

        hswage.setEnabled(false);

        workhs.setEnabled(false);

        jLabel14.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(77, 5, 232));
        jLabel14.setText("$");

        jLabel15.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(77, 5, 232));
        jLabel15.setText("hours/per month");

        jLabel16.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(77, 5, 232));
        jLabel16.setText("Month");

        monthbox.setMaximumRowCount(13);
        monthbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "Octorber", "November", "December" }));
        monthbox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                monthboxItemStateChanged(evt);
            }
        });
        monthbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                monthboxMouseClicked(evt);
            }
        });

        monthlabel.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        monthlabel.setForeground(new java.awt.Color(77, 5, 232));
        monthlabel.setText("*month*");

        jLabel17.setForeground(new java.awt.Color(255, 0, 0));
        jLabel17.setText("2020JIIT All rights reserved 18069 PHAM ANH CONG ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(first, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(previous, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(last, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel16)
                            .addComponent(jLabel12)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(6, 6, 6)
                                .addComponent(monthlabel)))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(hswage, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(workhs, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(salary, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bplace, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(monthbox, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 62, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                .addComponent(record, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel17))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(bplace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthlabel)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hswage)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(workhs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(monthbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(last)
                    .addComponent(next)
                    .addComponent(previous)
                    .addComponent(first))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(record)
                .addGap(26, 26, 26))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   
    private void exit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exit2ActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:

        String reEmail="\\w+@\\w+\\.\\w+";
        String renum="[0-9]{1,100}";
        String idcheck = "A[0-9]{3}";

        if(id.getText().matches("")||name.getText().matches("")||age.getText().matches("")||bplace.getText().matches("")||email.getText().matches("")){
            JOptionPane.showMessageDialog(null, "Cannot be blank");
            return;
        }
        else if(!email.getText().matches(reEmail)){
            JOptionPane.showMessageDialog(null, "Invalid Email Option !!!");
            return;
        }
        else if(!(age.getText().matches(renum))){
            JOptionPane.showMessageDialog(null, "Age must be number !!!");
            return;
        }
        else if(!(hswage.getText().matches(renum))){
            JOptionPane.showMessageDialog(null, "Hours Wage must be number !!!");
            return;
        }
        else if(!(workhs.getText().matches(renum))){
            if(Float.valueOf(workhs.getText())%0.25!=0){
            JOptionPane.showMessageDialog(null, "Work hours type is wrong!!!");
            return;
            }
        }
        else if(!id.getText().matches(idcheck)){
            JOptionPane.showMessageDialog(null, "ID must have 4 characters, which start with A and follow by 3 digits. For example : A123 !!!");
            return;
        }
        int result = JOptionPane.showConfirmDialog(null,"Save it to Database", "Are you sure !!",YES_NO_OPTION,JOptionPane.PLAIN_MESSAGE);
        if (result == JOptionPane.YES_OPTION){
           
         if(create=='e'){
            try{
                Class.forName("org.hsqldb.jdbc.JDBCDriver");
            try (Connection con = DriverManager.getConnection(
               "jdbc:hsqldb:file:HSQL/managing", "root", "")) {
                
                Statement stmt = (Statement) con.createStatement();
                float i = Float.valueOf(hswage.getText()) * Float.valueOf(workhs.getText());
                String query="UPDATE emp "
                +"SET name='"+name.getText()+"', age='"+age.getText()+"', birth='"+
                        bplace.getText()+"',email='"+email.getText()+"', hswage='"+hswage.getText()+
                "' where id= '"+id.getText()+"'";
                String query1 = "UPDATE monthly SET \"" + (monthbox.getSelectedIndex()+1) + "\" = " + Float.valueOf(workhs.getText()) +" where id ='"+id.getText()+"'";
                String query2 = "UPDATE salary SET \"" + (monthbox.getSelectedIndex()+1) + "\" = " + i +" where id ='"+id.getText()+"'";
                stmt.executeUpdate(query);
                stmt.executeUpdate(query1);
                stmt.executeUpdate(query2);
                JOptionPane.showMessageDialog(null, "Updated your change !!!");
                
            }
        }catch(ClassNotFoundException e){JOptionPane.showMessageDialog(null, "Class not found !!!");}
        catch (SQLException e) {
            //JOptionPane.showMessageDialog(null, "SQL problem!!!");
           // e.printStackTrace();
        }
        id.setEnabled(false);
        name.setEnabled(false);
        bplace.setEnabled(false);
        email.setEnabled(false);
        age.setEnabled(false);
        salary.setEnabled(false);
        cancel.setEnabled(false);

        delete.setEnabled(true);
        find.setEnabled(true);
        first.setEnabled(true);
        next.setEnabled(true);
        previous.setEnabled(true);
        last.setEnabled(true);
        edit.setEnabled(true);
        save.setEnabled(false);
        saveicon.setEnabled(false);
        exit.setEnabled(true);
        IDList.setEnabled(true);
        hswage.setEnabled(false);
        workhs.setEnabled(false);
        monthbox.setEnabled(true);
        }
      
        }
      // onLoad();
        Fil_combo();
        
    }//GEN-LAST:event_saveActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:

        int result = JOptionPane.showConfirmDialog(null,">> Back to Admin Page <<", "Are you sure !!",YES_NO_OPTION,JOptionPane.PLAIN_MESSAGE);
        if (result == JOptionPane.YES_OPTION){
            this.setVisible(false);
            new admin().setVisible(true);
        }

    }//GEN-LAST:event_exitActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:

        if(!id.getText().matches("")){
            int result = JOptionPane.showConfirmDialog(null,"Delete it from Database", "Are you sure !!",YES_NO_OPTION,JOptionPane.PLAIN_MESSAGE);
            if (result == JOptionPane.YES_OPTION){
                try{
                    Class.forName("org.hsqldb.jdbc.JDBCDriver");
            try (Connection con = DriverManager.getConnection(
               "jdbc:hsqldb:file:HSQL/managing", "root", "")) {
                    //here manager is database name, root is username and password
                    Statement stmt = (Statement) con.createStatement();

                    String query = "DELETE FROM emp WHERE id='"+id.getText()+"'";
                    String query1 = "DELETE FROM salary WHERE id = '"+id.getText()+"'";
                    String query2 = "DELETE FROM monthly WHERE id = '"+id.getText()+"'";
                    //ResultSet rs=stmt.executeQuery(query);
                    stmt.executeUpdate(query);
                    stmt.executeUpdate(query1);
                    stmt.executeUpdate(query2);
                    JOptionPane.showMessageDialog(null, "Delete done !");
                }
            }catch(ClassNotFoundException e){JOptionPane.showMessageDialog(null, "Class not found !!!");}
            catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "SQL problem!!!");
            }
           try{
                Class.forName("org.hsqldb.jdbc.JDBCDriver");
            try (Connection con = DriverManager.getConnection(
               "jdbc:hsqldb:file:HSQL/managing", "root", "")) {
                //here manager is database name, root is username and password
                Statement stmt=(Statement) con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
                ResultSet rs=stmt.executeQuery("select * from emp where id <> 'admin' order by id");
                ResultSet rs1=stmt.executeQuery("select count(id) from emp");
                rs.first();
                rs1.first();
                if(rs1.getInt(1)==1){
                id.setText("");
                name.setText("");
                age.setText("");
                bplace.setText("");
                email.setText("");
                hswage.setText("");
                }else{
                rs.next();
                id.setText(rs.getString(1));
                name.setText(rs.getString(2));
                age.setText(rs.getString(4));
                bplace.setText(rs.getString(5));
                email.setText(rs.getString(6));
                hswage.setText(rs.getString(7));
                }
                
        }
        }catch(ClassNotFoundException | SQLException e){//JOptionPane.showMessageDialog(null, "Cannot connect Database !!!")
                
                ;}
        record.setText("Record : ");
        cancel.setEnabled(false);
        }

        }
        else{
            JOptionPane.showMessageDialog(null, "Must have employee information");
        }
        onLoad();
        Fil_combo();

    }//GEN-LAST:event_deleteActionPerformed

    private void findActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findActionPerformed
        // TODO add your handling code here:
        int index;
        id.setText("");
        name.setText("");
        age.setText("");
        bplace.setText("");
        email.setText("");
        salary.setText("");
        record.setText("Record : ");
        JFrame Paneframe = new JFrame("InputDialog Example #1");
        String response = JOptionPane.showInputDialog(Paneframe,"Enter ID you want to search here !" );
        boolean search = false;
        try{
            Class.forName("org.hsqldb.jdbc.JDBCDriver");
            try (Connection con = DriverManager.getConnection(
               "jdbc:hsqldb:file:HSQL/managing", "root", "")) {

            String query = ("select * from emp order by id");
            Statement stmt=(Statement) con.createStatement();
            ResultSet rs=stmt.executeQuery(query);
            //show it on screen
            int i=1;
            while(rs.next()){
                if(rs.getString(1).equals(response)){
                    id.setText(rs.getString(1));
                    name.setText(rs.getString(2));
                    age.setText(rs.getString(4));
                    bplace.setText(rs.getString(5));
                    email.setText(rs.getString(6));
                    hswage.setText(rs.getString(7));
                    index = getRowNumber();
                    record.setText("Record : " + (i) +  " of "+index);
                    IDList.setSelectedIndex(i-1);
                    search = true;
                    break;
                    }
                i++;
            }
        }
        }catch(ClassNotFoundException | SQLException e){ JOptionPane.showMessageDialog(null, "Cannot connect Database !!!");}

        if(search == false){
            JOptionPane.showMessageDialog(null, "ID Not Found !!!");
        }
       // onLoad();
        Fil_combo();
    }//GEN-LAST:event_findActionPerformed

    private void IDListKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IDListKeyPressed
        // TODO add your handling code here:
        

        if(evt.getKeyCode()==KeyEvent.VK_RIGHT){
            next.doClick();
        }

        if(evt.getKeyCode()==KeyEvent.VK_LEFT){
            previous.doClick();
        }
        
        Fil_combo();
    }//GEN-LAST:event_IDListKeyPressed

    private void IDListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IDListMouseClicked
        // TODO add your handling code here:
        String tmp = IDList.getSelectedValue();
        int index;

        if(checklist==true){

            try{
                Class.forName("org.hsqldb.jdbc.JDBCDriver");
            try (Connection con = DriverManager.getConnection(
               "jdbc:hsqldb:file:HSQL/managing", "root", "")) {
                String query = ("select * from emp where id <> 'admin' order by id");
                Statement stmt=(Statement) con.createStatement();
                ResultSet rs=stmt.executeQuery(query);
                //show it on screen
                int i = 1;
                while(rs.next()){
                    if(rs.getString(1).equals(tmp)){
                         id.setText(rs.getString(1));
                name.setText(rs.getString(2));
                age.setText(rs.getString(4));
                bplace.setText(rs.getString(5));
                email.setText(rs.getString(6));
                hswage.setText(rs.getString(7));
                index = getRowNumber();
                record.setText("Record : " + i +  " of "+index);
                        break;
                    }
                    i++;
                }
            }
        }catch(ClassNotFoundException | SQLException e){
            //JOptionPane.showMessageDialog(null, "Oops SQL problem  !!!");
            e.printStackTrace();
        }
        }
      Fil_combo();
    }//GEN-LAST:event_IDListMouseClicked

    private void lastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastActionPerformed
        // TODO add your handling code here:
        int index=getRowNumber();
        try{
           Class.forName("org.hsqldb.jdbc.JDBCDriver");
            try (Connection con = DriverManager.getConnection(
               "jdbc:hsqldb:file:HSQL/managing", "root", "")) {
           
            Statement stmt=(Statement) con.createStatement();
            ResultSet rs=stmt.executeQuery("select * from emp where id <>'admin' order by id");
            //show it on screen
           
             while(rs.next()){
                 
                  id.setText(rs.getString(1));
                  name.setText(rs.getString(2));
            age.setText(rs.getString(4));
            bplace.setText(rs.getString(5));
            email.setText(rs.getString(6));
            hswage.setText(rs.getString(7));
                  
                  
               }
            
  }
        }catch(ClassNotFoundException | SQLException e){ 
            JOptionPane.showMessageDialog(null, "Cannot connect Database !!!");
      
        }

        
        record.setText("Record : "+index+ " of "+index);
        IDList.setSelectedIndex(index-1);
        Fil_combo();

    }//GEN-LAST:event_lastActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        // TODO add your handling code here:
        int index;
        try{
           Class.forName("org.hsqldb.jdbc.JDBCDriver");
            try (Connection con = DriverManager.getConnection(
               "jdbc:hsqldb:file:HSQL/managing", "root", "")) {
            String query = ("select * from emp where id <>'admin' order by id");
            Statement stmt=(Statement) con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            ResultSet rs=stmt.executeQuery(query);
            //show it on screen
             
            int i = 1;
            while(rs.absolute(i)){
                if(rs.getString(1).equals(id.getText())){
                    break;
                }
                i++;
            }
            rs.absolute(i+1);
            id.setText(rs.getString(1));
            name.setText(rs.getString(2));
            age.setText(rs.getString(4));
            bplace.setText(rs.getString(5));
            email.setText(rs.getString(6));
            hswage.setText(rs.getString(7));
            index = getRowNumber();
            record.setText("Record : " + (i+1) +  " of "+index);
            IDList.setSelectedIndex(IDList.getSelectedIndex()+1);
        }
        }catch(ClassNotFoundException | SQLException e){ JOptionPane.showMessageDialog(null, "Last employee  !!!");}
        Fil_combo();

    }//GEN-LAST:event_nextActionPerformed

    private void previousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousActionPerformed
        // TODO add your handling code here:
        int index;
        try{
           Class.forName("org.hsqldb.jdbc.JDBCDriver");
            try (Connection con = DriverManager.getConnection(
               "jdbc:hsqldb:file:HSQL/managing", "root", "")) {
            String query = ("select * from emp where id <> 'admin' order by id");
            Statement stmt=(Statement) con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            ResultSet rs=stmt.executeQuery(query);
            //show it on screen
            int i = 1;
            while(rs.absolute(i)){
                if(rs.getString(1).equals(id.getText())){
                    break;
                }
                i++;
            }
            rs.absolute(i-1);
            id.setText(rs.getString(1));
            name.setText(rs.getString(2));
            age.setText(rs.getString(4));
            bplace.setText(rs.getString(5));
            email.setText(rs.getString(6));
            hswage.setText(rs.getString(7));
            index = getRowNumber();
            record.setText("Record : " + (i-1) +  " of "+index);
            IDList.setSelectedIndex(IDList.getSelectedIndex()-1);
        }
        }catch(ClassNotFoundException | SQLException e){ JOptionPane.showMessageDialog(null, "First employee !!!");}
        Fil_combo();
    }//GEN-LAST:event_previousActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        int index;

        id.setEnabled(false);
        name.setEnabled(false);
        bplace.setEnabled(false);
        email.setEnabled(false);
        age.setEnabled(false);
        salary.setEnabled(false);
        cancel.setEnabled(false);

        delete.setEnabled(true);
        find.setEnabled(true);
        first.setEnabled(true);
        next.setEnabled(true);
        previous.setEnabled(true);
        last.setEnabled(true);
        edit.setEnabled(true);
        save.setEnabled(false);
        saveicon.setEnabled(false);
        
         if (create=='e'){
            try{
                Class.forName("org.hsqldb.jdbc.JDBCDriver");
            try (Connection con = DriverManager.getConnection(
               "jdbc:hsqldb:file:HSQL/managing", "root", "")) {
                Statement stmt=(Statement) con.createStatement();
                ResultSet rs=stmt.executeQuery("select * from emp where id <> 'admin' order by id");
                //show it on screen
                int i = 1;
                while(rs.next()){
                    if(rs.getString(1).equals(id.getText())){
                        id.setText(rs.getString(1));
                name.setText(rs.getString(2));
                age.setText(rs.getString(4));
                bplace.setText(rs.getString(5));
                email.setText(rs.getString(6));
                hswage.setText(rs.getString(7));
                index = getRowNumber();
                record.setText("Record : " + (i) +  " of "+index);
                        break;
                    }
                    i++;
                }
                
            }
        }catch(ClassNotFoundException | SQLException e){ JOptionPane.showMessageDialog(null, "Oops SQL problem  !!!");}

        }
        index = getRowNumber();
        record.setText("Record : 1 of "+index);
        cancel.setEnabled(false);
        IDList.setEnabled(true);
        checklist = true;
        exit.setEnabled(true);
        hswage.setEnabled(false);
        workhs.setEnabled(false);
        monthbox.setEnabled(true);
       
      Fil_combo();
    }//GEN-LAST:event_cancelActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
        create='e';
        id.setEnabled(false);
        name.setEnabled(true);
        bplace.setEnabled(true);
        email.setEnabled(true);
        age.setEnabled(true);
        //salary.setEnabled(true);
        cancel.setEnabled(true);

        delete.setEnabled(false);
        exit.setEnabled(false);
        find.setEnabled(false);
        save.setEnabled(true);
        saveicon.setEnabled(true);
        hswage.setEnabled(true);
        workhs.setEnabled(true);
         find.setEnabled(false);
        first.setEnabled(false);
        next.setEnabled(false);
        previous.setEnabled(false);
        last.setEnabled(false);
        IDList.setEnabled(false);
        monthbox.setEnabled(false);
    }//GEN-LAST:event_editActionPerformed

    private void firstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstActionPerformed
        // TODO add your handling code here:
           int index;
       try{
            Class.forName("org.hsqldb.jdbc.JDBCDriver");
            try (Connection con = DriverManager.getConnection(
               "jdbc:hsqldb:file:HSQL/managing", "root", "")) {
            Statement stmt=(Statement) con.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY );
            ResultSet rs=stmt.executeQuery("select * from emp where id <>'admin' order by id ");
            //show it on screen
           rs.first();
            id.setText(rs.getString(1));
            name.setText(rs.getString(2));
            age.setText(rs.getString(4));
            bplace.setText(rs.getString(5));
            email.setText(rs.getString(6));
            hswage.setText(rs.getString(7));
           
        }
        }catch(ClassNotFoundException | SQLException e){
            e.printStackTrace();
        //    JOptionPane.showMessageDialog(null, "Cannot connect Database !!!");
        }
       index=getRowNumber();
        record.setText("Record : 1 of "+index);
        IDList.setSelectedIndex(0);
Fil_combo();
    }//GEN-LAST:event_firstActionPerformed

    private void saveiconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveiconMouseClicked
        // TODO add your handling code here:
        save.doClick();
    }//GEN-LAST:event_saveiconMouseClicked

    private void monthboxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_monthboxMouseClicked
        // TODO add your handling code here:
        Fil_combo();
    }//GEN-LAST:event_monthboxMouseClicked

    private void monthboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_monthboxItemStateChanged
        // TODO add your handling code here:
         Fil_combo();
    }//GEN-LAST:event_monthboxItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> IDList;
    private javax.swing.JTextField age;
    private javax.swing.JTextField bplace;
    private java.awt.Button button1;
    private javax.swing.JButton cancel;
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JTextField email;
    private javax.swing.JButton exit;
    private javax.swing.JButton exit2;
    private javax.swing.JButton find;
    private javax.swing.JButton first;
    private javax.swing.JTextField hswage;
    private javax.swing.JTextField id;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton last;
    private javax.swing.JComboBox<String> monthbox;
    private javax.swing.JLabel monthlabel;
    private javax.swing.JTextField name;
    private javax.swing.JButton next;
    private javax.swing.JButton previous;
    private javax.swing.JLabel record;
    private javax.swing.JTextField salary;
    private javax.swing.JButton save;
    private javax.swing.JLabel saveicon;
    private javax.swing.JTextField workhs;
    // End of variables declaration//GEN-END:variables

    

 

    
}
